package chapter7;public class CorruptWrite {    private String fname;    private String lname;    public void setNames(String fname, String lname) {        print("entering setNames()");        this.fname = fname;        if (fname.length() < 5) {            try {                Thread.sleep(1000);            } catch (InterruptedException e) {                //ignore            }        } else {            try {                Thread.sleep(3000);            } catch (InterruptedException e) {                //ignore            }        }        this.lname = lname;        print("Leaving setNames() - " + lname + ", " + fname);    }    public void print(String msg){        //        String threadName = Thread.currentThread().getName();        System.out.println(threadName + ": " + msg);    }    public static void main(String[] args) {        final CorruptWrite cw = new CorruptWrite();        Runnable runA = new Runnable() {            @Override            public void run() {                cw.setNames("George", "Washington");            }        };        Thread threadA = new Thread(runA, "threadA");        threadA.start();        try {            Thread.sleep(100);        } catch (InterruptedException e) {            //ignore        }        Runnable runB = new Runnable() {            @Override            public void run() {                cw.setNames("Abe", "Lincoln");            }        };        Thread threadB = new Thread(runB, "threadB");        threadB.start();    }}